[1] Generating expression of size 6
[1] Op1 size=6, size: 5
[2] Generating expression of size 5
[2] Op1 size=5, size: 4
[3] Generating expression of size 4
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] For size 2. O1: 9; O2: 0; Fold: 0; TFold: 0; If: 0
[4] Op2 size=3, sizes: [[1,1]]
[4] For size 3. O1: 27; O2: 9; Fold: 0; TFold: 0; If: 0
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] For size 2. O1: 9; O2: 0; Fold: 0; TFold: 0; If: 0
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] For size 2. O1: 9; O2: 0; Fold: 0; TFold: 0; If: 0
[3] For size 4. O1: 108; O2: 54; Fold: 0; TFold: 0; If: 0
[2] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[3] Generating expression of size 3
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] For size 2. O1: 9; O2: 0; Fold: 0; TFold: 0; If: 0
[3] Op2 size=3, sizes: [[1,1]]
[3] For size 3. O1: 27; O2: 9; Fold: 0; TFold: 0; If: 0
[3] Generating expression of size 2
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] For size 2. O1: 9; O2: 0; Fold: 0; TFold: 0; If: 0
[3] Generating expression of size 2
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] For size 2. O1: 9; O2: 0; Fold: 0; TFold: 0; If: 0
[3] Generating expression of size 3
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] For size 2. O1: 9; O2: 0; Fold: 0; TFold: 0; If: 0
[3] Op2 size=3, sizes: [[1,1]]
[3] For size 3. O1: 27; O2: 9; Fold: 0; TFold: 0; If: 0
[2] For size 5. O1: 486; O2: 297; Fold: 0; TFold: 0; If: 0
[1] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[2] Generating expression of size 4
[2] Op1 size=4, size: 3
[3] Generating expression of size 3
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] For size 2. O1: 9; O2: 0; Fold: 0; TFold: 0; If: 0
[3] Op2 size=3, sizes: [[1,1]]
[3] For size 3. O1: 27; O2: 9; Fold: 0; TFold: 0; If: 0
[2] Op2 size=4, sizes: [[1,2],[2,1]]
[3] Generating expression of size 2
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] For size 2. O1: 9; O2: 0; Fold: 0; TFold: 0; If: 0
[3] Generating expression of size 2
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] For size 2. O1: 9; O2: 0; Fold: 0; TFold: 0; If: 0
[2] For size 4. O1: 108; O2: 54; Fold: 0; TFold: 0; If: 0
[2] Generating expression of size 2
[2] Op1 size=2, size: 1
[2] Op2 size=2, sizes: []
[2] For size 2. O1: 9; O2: 0; Fold: 0; TFold: 0; If: 0
[2] Generating expression of size 3
[2] Op1 size=3, size: 2
[3] Generating expression of size 2
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] For size 2. O1: 9; O2: 0; Fold: 0; TFold: 0; If: 0
[2] Op2 size=3, sizes: [[1,1]]
[2] For size 3. O1: 27; O2: 9; Fold: 0; TFold: 0; If: 0
[2] Generating expression of size 3
[2] Op1 size=3, size: 2
[3] Generating expression of size 2
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] For size 2. O1: 9; O2: 0; Fold: 0; TFold: 0; If: 0
[2] Op2 size=3, sizes: [[1,1]]
[2] For size 3. O1: 27; O2: 9; Fold: 0; TFold: 0; If: 0
[2] Generating expression of size 2
[2] Op1 size=2, size: 1
[2] Op2 size=2, sizes: []
[2] For size 2. O1: 9; O2: 0; Fold: 0; TFold: 0; If: 0
[2] Generating expression of size 4
[2] Op1 size=4, size: 3
[3] Generating expression of size 3
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] For size 2. O1: 9; O2: 0; Fold: 0; TFold: 0; If: 0
[3] Op2 size=3, sizes: [[1,1]]
[3] For size 3. O1: 27; O2: 9; Fold: 0; TFold: 0; If: 0
[2] Op2 size=4, sizes: [[1,2],[2,1]]
[3] Generating expression of size 2
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] For size 2. O1: 9; O2: 0; Fold: 0; TFold: 0; If: 0
[3] Generating expression of size 2
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] For size 2. O1: 9; O2: 0; Fold: 0; TFold: 0; If: 0
[2] For size 4. O1: 108; O2: 54; Fold: 0; TFold: 0; If: 0
[1] For size 6. O1: 2349; O2: 1620; Fold: 0; TFold: 0; If: 0
Waiting before next request.
Ask for /eval for problem 2tsDLOlL6GpqSd0WED3wNW0V on values [0x5387a74ad7bdbbc6,0x3dc975cb16a3f812,0xbddda3dfb07d13b5,0xc5dd4e25819d35f2,0x229c64599070482d,0x1ee844f525ab3991,0xe1c1bba767a56ca6]
Our request: {"id":"2tsDLOlL6GpqSd0WED3wNW0V","arguments":["0x5387a74ad7bdbbc6","0x3dc975cb16a3f812","0xbddda3dfb07d13b5","0xc5dd4e25819d35f2","0x229c64599070482d","0x1ee844f525ab3991","0xe1c1bba767a56ca6"]}
Server response: {"status":"ok","outputs":["0xFFFFAC7858B52842","0xFFFFC2368A34E95C","0xFFFF42225C204F82","0xFFFF3A22B1DA7E62","0xFFFFDD639BA66F8F","0xFFFFE117BB0ADA54","0xFFFF1E3E4458985A"]}
Trees left: 12
Guessing: (lambda (x1) (not (shr16 (plus x1 (shr4 0)))))
Waiting before next request.
Our request: {"id":"2tsDLOlL6GpqSd0WED3wNW0V","program":"(lambda (x1) (not (shr16 (plus x1 (shr4 0)))))"}
Server response: {"status":"win","lightning":false}
(not (shr16 (plus x1 (shr4 0))))
