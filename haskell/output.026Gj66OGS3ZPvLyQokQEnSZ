[1] Generating expression of size 11
[1] TFold size=11, sizes: [[1,1,7],[1,2,6],[1,3,5],[1,4,4],[1,5,3],[1,6,2],[1,7,1],[2,1,6],[2,2,5],[2,3,4],[2,4,3],[2,5,2],[2,6,1],[3,1,5],[3,2,4],[3,3,3],[3,4,2],[3,5,1],[4,1,4],[4,2,3],[4,3,2],[4,4,1],[5,1,3],[5,2,2],[5,3,1],[6,1,2],[6,2,1],[7,1,1]]
[2] Generating expression of size 7
[2] TFold size=7, sizes: [[1,1,3],[1,2,2],[1,3,1],[2,1,2],[2,2,1],[3,1,1]]
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op1 size=7, size: 6
[3] Generating expression of size 6
[3] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=6, size: 5
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[2] Op2 size=7, sizes: [[1,5],[2,4],[3,3],[4,2],[5,1]]
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[2] Generating expression of size 6
[2] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op1 size=6, size: 5
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[2] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[2] Generating expression of size 5
[2] TFold size=5, sizes: [[1,1,1]]
[2] Op1 size=5, size: 4
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[2] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[2] Generating expression of size 4
[2] TFold size=4, sizes: []
[2] Op1 size=4, size: 3
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[2] Op2 size=4, sizes: [[1,2],[2,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Generating expression of size 3
[2] TFold size=3, sizes: []
[2] Op1 size=3, size: 2
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op2 size=3, sizes: [[1,1]]
[2] Generating expression of size 2
[2] TFold size=2, sizes: []
[2] Op1 size=2, size: 1
[2] Op2 size=2, sizes: []
[2] Generating expression of size 6
[2] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op1 size=6, size: 5
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[2] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[2] Generating expression of size 5
[2] TFold size=5, sizes: [[1,1,1]]
[2] Op1 size=5, size: 4
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[2] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[2] Generating expression of size 4
[2] TFold size=4, sizes: []
[2] Op1 size=4, size: 3
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[2] Op2 size=4, sizes: [[1,2],[2,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Generating expression of size 3
[2] TFold size=3, sizes: []
[2] Op1 size=3, size: 2
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op2 size=3, sizes: [[1,1]]
[2] Generating expression of size 2
[2] TFold size=2, sizes: []
[2] Op1 size=2, size: 1
[2] Op2 size=2, sizes: []
[2] Generating expression of size 5
[2] TFold size=5, sizes: [[1,1,1]]
[2] Op1 size=5, size: 4
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[2] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[2] Generating expression of size 4
[2] TFold size=4, sizes: []
[2] Op1 size=4, size: 3
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[2] Op2 size=4, sizes: [[1,2],[2,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Generating expression of size 3
[2] TFold size=3, sizes: []
[2] Op1 size=3, size: 2
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op2 size=3, sizes: [[1,1]]
[2] Generating expression of size 2
[2] TFold size=2, sizes: []
[2] Op1 size=2, size: 1
[2] Op2 size=2, sizes: []
[2] Generating expression of size 4
[2] TFold size=4, sizes: []
[2] Op1 size=4, size: 3
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[2] Op2 size=4, sizes: [[1,2],[2,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Generating expression of size 3
[2] TFold size=3, sizes: []
[2] Op1 size=3, size: 2
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op2 size=3, sizes: [[1,1]]
[2] Generating expression of size 2
[2] TFold size=2, sizes: []
[2] Op1 size=2, size: 1
[2] Op2 size=2, sizes: []
[2] Generating expression of size 3
[2] TFold size=3, sizes: []
[2] Op1 size=3, size: 2
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op2 size=3, sizes: [[1,1]]
[2] Generating expression of size 2
[2] TFold size=2, sizes: []
[2] Op1 size=2, size: 1
[2] Op2 size=2, sizes: []
[2] Generating expression of size 2
[2] TFold size=2, sizes: []
[2] Op1 size=2, size: 1
[2] Op2 size=2, sizes: []
[1] Op1 size=11, size: 10
[2] Generating expression of size 10
[2] TFold size=10, sizes: [[1,1,6],[1,2,5],[1,3,4],[1,4,3],[1,5,2],[1,6,1],[2,1,5],[2,2,4],[2,3,3],[2,4,2],[2,5,1],[3,1,4],[3,2,3],[3,3,2],[3,4,1],[4,1,3],[4,2,2],[4,3,1],[5,1,2],[5,2,1],[6,1,1]]
[3] Generating expression of size 6
[3] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=6, size: 5
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op1 size=10, size: 9
[3] Generating expression of size 9
[3] TFold size=9, sizes: [[1,1,5],[1,2,4],[1,3,3],[1,4,2],[1,5,1],[2,1,4],[2,2,3],[2,3,2],[2,4,1],[3,1,3],[3,2,2],[3,3,1],[4,1,2],[4,2,1],[5,1,1]]
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=9, size: 8
[4] Generating expression of size 8
[4] TFold size=8, sizes: [[1,1,4],[1,2,3],[1,3,2],[1,4,1],[2,1,3],[2,2,2],[2,3,1],[3,1,2],[3,2,1],[4,1,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=8, size: 7
[5] Generating expression of size 7
[5] TFold size=7, sizes: [[1,1,3],[1,2,2],[1,3,1],[2,1,2],[2,2,1],[3,1,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op1 size=7, size: 6
[6] Generating expression of size 6
[6] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op1 size=6, size: 5
[7] Generating expression of size 5
[7] TFold size=5, sizes: [[1,1,1]]
[7] Op1 size=5, size: 4
[8] Generating expression of size 4
[8] TFold size=4, sizes: []
[8] Op1 size=4, size: 3
[9] Generating expression of size 3
[9] TFold size=3, sizes: []
[9] Op1 size=3, size: 2
[10] Generating expression of size 2
[10] TFold size=2, sizes: []
[10] Op1 size=2, size: 1
[10] Op2 size=2, sizes: []
[9] Op2 size=3, sizes: [[1,1]]
[8] Op2 size=4, sizes: [[1,2],[2,1]]
[9] Generating expression of size 2
[9] TFold size=2, sizes: []
[9] Op1 size=2, size: 1
[9] Op2 size=2, sizes: []
[9] Generating expression of size 2
[9] TFold size=2, sizes: []
[9] Op1 size=2, size: 1
[9] Op2 size=2, sizes: []
[7] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[8] Generating expression of size 3
[8] TFold size=3, sizes: []
[8] Op1 size=3, size: 2
[9] Generating expression of size 2
[9] TFold size=2, sizes: []
[9] Op1 size=2, size: 1
[9] Op2 size=2, sizes: []
[8] Op2 size=3, sizes: [[1,1]]
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[8] Generating expression of size 3
[8] TFold size=3, sizes: []
[8] Op1 size=3, size: 2
[9] Generating expression of size 2
[9] TFold size=2, sizes: []
[9] Op1 size=2, size: 1
[9] Op2 size=2, sizes: []
[8] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[7] Generating expression of size 4
[7] TFold size=4, sizes: []
[7] Op1 size=4, size: 3
[8] Generating expression of size 3
[8] TFold size=3, sizes: []
[8] Op1 size=3, size: 2
[9] Generating expression of size 2
[9] TFold size=2, sizes: []
[9] Op1 size=2, size: 1
[9] Op2 size=2, sizes: []
[8] Op2 size=3, sizes: [[1,1]]
[7] Op2 size=4, sizes: [[1,2],[2,1]]
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 4
[7] TFold size=4, sizes: []
[7] Op1 size=4, size: 3
[8] Generating expression of size 3
[8] TFold size=3, sizes: []
[8] Op1 size=3, size: 2
[9] Generating expression of size 2
[9] TFold size=2, sizes: []
[9] Op1 size=2, size: 1
[9] Op2 size=2, sizes: []
[8] Op2 size=3, sizes: [[1,1]]
[7] Op2 size=4, sizes: [[1,2],[2,1]]
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[5] Op2 size=7, sizes: [[1,5],[2,4],[3,3],[4,2],[5,1]]
[6] Generating expression of size 5
[6] TFold size=5, sizes: [[1,1,1]]
[6] Op1 size=5, size: 4
[7] Generating expression of size 4
[7] TFold size=4, sizes: []
[7] Op1 size=4, size: 3
[8] Generating expression of size 3
[8] TFold size=3, sizes: []
[8] Op1 size=3, size: 2
[9] Generating expression of size 2
[9] TFold size=2, sizes: []
[9] Op1 size=2, size: 1
[9] Op2 size=2, sizes: []
[8] Op2 size=3, sizes: [[1,1]]
[7] Op2 size=4, sizes: [[1,2],[2,1]]
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[6] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 5
[6] TFold size=5, sizes: [[1,1,1]]
[6] Op1 size=5, size: 4
[7] Generating expression of size 4
[7] TFold size=4, sizes: []
[7] Op1 size=4, size: 3
[8] Generating expression of size 3
[8] TFold size=3, sizes: []
[8] Op1 size=3, size: 2
[9] Generating expression of size 2
[9] TFold size=2, sizes: []
[9] Op1 size=2, size: 1
[9] Op2 size=2, sizes: []
[8] Op2 size=3, sizes: [[1,1]]
[7] Op2 size=4, sizes: [[1,2],[2,1]]
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[6] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=8, sizes: [[1,6],[2,5],[3,4],[4,3],[5,2],[6,1]]
[5] Generating expression of size 6
[5] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op1 size=6, size: 5
[6] Generating expression of size 5
[6] TFold size=5, sizes: [[1,1,1]]
[6] Op1 size=5, size: 4
[7] Generating expression of size 4
[7] TFold size=4, sizes: []
[7] Op1 size=4, size: 3
[8] Generating expression of size 3
[8] TFold size=3, sizes: []
[8] Op1 size=3, size: 2
[9] Generating expression of size 2
[9] TFold size=2, sizes: []
[9] Op1 size=2, size: 1
[9] Op2 size=2, sizes: []
[8] Op2 size=3, sizes: [[1,1]]
[7] Op2 size=4, sizes: [[1,2],[2,1]]
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[6] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 6
[5] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op1 size=6, size: 5
[6] Generating expression of size 5
[6] TFold size=5, sizes: [[1,1,1]]
[6] Op1 size=5, size: 4
[7] Generating expression of size 4
[7] TFold size=4, sizes: []
[7] Op1 size=4, size: 3
[8] Generating expression of size 3
[8] TFold size=3, sizes: []
[8] Op1 size=3, size: 2
[9] Generating expression of size 2
[9] TFold size=2, sizes: []
[9] Op1 size=2, size: 1
[9] Op2 size=2, sizes: []
[8] Op2 size=3, sizes: [[1,1]]
[7] Op2 size=4, sizes: [[1,2],[2,1]]
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[6] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[3] Op2 size=9, sizes: [[1,7],[2,6],[3,5],[4,4],[5,3],[6,2],[7,1]]
[4] Generating expression of size 7
[4] TFold size=7, sizes: [[1,1,3],[1,2,2],[1,3,1],[2,1,2],[2,2,1],[3,1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=7, size: 6
[5] Generating expression of size 6
[5] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op1 size=6, size: 5
[6] Generating expression of size 5
[6] TFold size=5, sizes: [[1,1,1]]
[6] Op1 size=5, size: 4
[7] Generating expression of size 4
[7] TFold size=4, sizes: []
[7] Op1 size=4, size: 3
[8] Generating expression of size 3
[8] TFold size=3, sizes: []
[8] Op1 size=3, size: 2
[9] Generating expression of size 2
[9] TFold size=2, sizes: []
[9] Op1 size=2, size: 1
[9] Op2 size=2, sizes: []
[8] Op2 size=3, sizes: [[1,1]]
[7] Op2 size=4, sizes: [[1,2],[2,1]]
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[6] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[4] Op2 size=7, sizes: [[1,5],[2,4],[3,3],[4,2],[5,1]]
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 6
[4] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=6, size: 5
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 6
[4] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=6, size: 5
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 7
[4] TFold size=7, sizes: [[1,1,3],[1,2,2],[1,3,1],[2,1,2],[2,2,1],[3,1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=7, size: 6
[5] Generating expression of size 6
[5] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op1 size=6, size: 5
[6] Generating expression of size 5
[6] TFold size=5, sizes: [[1,1,1]]
[6] Op1 size=5, size: 4
[7] Generating expression of size 4
[7] TFold size=4, sizes: []
[7] Op1 size=4, size: 3
[8] Generating expression of size 3
[8] TFold size=3, sizes: []
[8] Op1 size=3, size: 2
[9] Generating expression of size 2
[9] TFold size=2, sizes: []
[9] Op1 size=2, size: 1
[9] Op2 size=2, sizes: []
[8] Op2 size=3, sizes: [[1,1]]
[7] Op2 size=4, sizes: [[1,2],[2,1]]
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[6] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[4] Op2 size=7, sizes: [[1,5],[2,4],[3,3],[4,2],[5,1]]
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[2] Op2 size=10, sizes: [[1,8],[2,7],[3,6],[4,5],[5,4],[6,3],[7,2],[8,1]]
[3] Generating expression of size 8
[3] TFold size=8, sizes: [[1,1,4],[1,2,3],[1,3,2],[1,4,1],[2,1,3],[2,2,2],[2,3,1],[3,1,2],[3,2,1],[4,1,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=8, size: 7
[4] Generating expression of size 7
[4] TFold size=7, sizes: [[1,1,3],[1,2,2],[1,3,1],[2,1,2],[2,2,1],[3,1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=7, size: 6
[5] Generating expression of size 6
[5] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op1 size=6, size: 5
[6] Generating expression of size 5
[6] TFold size=5, sizes: [[1,1,1]]
[6] Op1 size=5, size: 4
[7] Generating expression of size 4
[7] TFold size=4, sizes: []
[7] Op1 size=4, size: 3
[8] Generating expression of size 3
[8] TFold size=3, sizes: []
[8] Op1 size=3, size: 2
[9] Generating expression of size 2
[9] TFold size=2, sizes: []
[9] Op1 size=2, size: 1
[9] Op2 size=2, sizes: []
[8] Op2 size=3, sizes: [[1,1]]
[7] Op2 size=4, sizes: [[1,2],[2,1]]
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[6] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[4] Op2 size=7, sizes: [[1,5],[2,4],[3,3],[4,2],[5,1]]
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=8, sizes: [[1,6],[2,5],[3,4],[4,3],[5,2],[6,1]]
[4] Generating expression of size 6
[4] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=6, size: 5
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 6
[4] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=6, size: 5
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 7
[3] TFold size=7, sizes: [[1,1,3],[1,2,2],[1,3,1],[2,1,2],[2,2,1],[3,1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=7, size: 6
[4] Generating expression of size 6
[4] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=6, size: 5
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[3] Op2 size=7, sizes: [[1,5],[2,4],[3,3],[4,2],[5,1]]
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 6
[3] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=6, size: 5
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 4
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 6
[3] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=6, size: 5
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 7
[3] TFold size=7, sizes: [[1,1,3],[1,2,2],[1,3,1],[2,1,2],[2,2,1],[3,1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=7, size: 6
[4] Generating expression of size 6
[4] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=6, size: 5
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[3] Op2 size=7, sizes: [[1,5],[2,4],[3,3],[4,2],[5,1]]
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 8
[3] TFold size=8, sizes: [[1,1,4],[1,2,3],[1,3,2],[1,4,1],[2,1,3],[2,2,2],[2,3,1],[3,1,2],[3,2,1],[4,1,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=8, size: 7
[4] Generating expression of size 7
[4] TFold size=7, sizes: [[1,1,3],[1,2,2],[1,3,1],[2,1,2],[2,2,1],[3,1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=7, size: 6
[5] Generating expression of size 6
[5] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op1 size=6, size: 5
[6] Generating expression of size 5
[6] TFold size=5, sizes: [[1,1,1]]
[6] Op1 size=5, size: 4
[7] Generating expression of size 4
[7] TFold size=4, sizes: []
[7] Op1 size=4, size: 3
[8] Generating expression of size 3
[8] TFold size=3, sizes: []
[8] Op1 size=3, size: 2
[9] Generating expression of size 2
[9] TFold size=2, sizes: []
[9] Op1 size=2, size: 1
[9] Op2 size=2, sizes: []
[8] Op2 size=3, sizes: [[1,1]]
[7] Op2 size=4, sizes: [[1,2],[2,1]]
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[6] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[4] Op2 size=7, sizes: [[1,5],[2,4],[3,3],[4,2],[5,1]]
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=8, sizes: [[1,6],[2,5],[3,4],[4,3],[5,2],[6,1]]
[4] Generating expression of size 6
[4] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=6, size: 5
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 6
[4] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=6, size: 5
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[1] Op2 size=11, sizes: [[1,9],[2,8],[3,7],[4,6],[5,5],[6,4],[7,3],[8,2],[9,1]]
[2] Generating expression of size 9
[2] TFold size=9, sizes: [[1,1,5],[1,2,4],[1,3,3],[1,4,2],[1,5,1],[2,1,4],[2,2,3],[2,3,2],[2,4,1],[3,1,3],[3,2,2],[3,3,1],[4,1,2],[4,2,1],[5,1,1]]
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op1 size=9, size: 8
[3] Generating expression of size 8
[3] TFold size=8, sizes: [[1,1,4],[1,2,3],[1,3,2],[1,4,1],[2,1,3],[2,2,2],[2,3,1],[3,1,2],[3,2,1],[4,1,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=8, size: 7
[4] Generating expression of size 7
[4] TFold size=7, sizes: [[1,1,3],[1,2,2],[1,3,1],[2,1,2],[2,2,1],[3,1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=7, size: 6
[5] Generating expression of size 6
[5] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op1 size=6, size: 5
[6] Generating expression of size 5
[6] TFold size=5, sizes: [[1,1,1]]
[6] Op1 size=5, size: 4
[7] Generating expression of size 4
[7] TFold size=4, sizes: []
[7] Op1 size=4, size: 3
[8] Generating expression of size 3
[8] TFold size=3, sizes: []
[8] Op1 size=3, size: 2
[9] Generating expression of size 2
[9] TFold size=2, sizes: []
[9] Op1 size=2, size: 1
[9] Op2 size=2, sizes: []
[8] Op2 size=3, sizes: [[1,1]]
[7] Op2 size=4, sizes: [[1,2],[2,1]]
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[6] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[4] Op2 size=7, sizes: [[1,5],[2,4],[3,3],[4,2],[5,1]]
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=8, sizes: [[1,6],[2,5],[3,4],[4,3],[5,2],[6,1]]
[4] Generating expression of size 6
[4] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=6, size: 5
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 6
[4] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=6, size: 5
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[2] Op2 size=9, sizes: [[1,7],[2,6],[3,5],[4,4],[5,3],[6,2],[7,1]]
[3] Generating expression of size 7
[3] TFold size=7, sizes: [[1,1,3],[1,2,2],[1,3,1],[2,1,2],[2,2,1],[3,1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=7, size: 6
[4] Generating expression of size 6
[4] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=6, size: 5
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[3] Op2 size=7, sizes: [[1,5],[2,4],[3,3],[4,2],[5,1]]
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 6
[3] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=6, size: 5
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 3
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 6
[3] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=6, size: 5
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 7
[3] TFold size=7, sizes: [[1,1,3],[1,2,2],[1,3,1],[2,1,2],[2,2,1],[3,1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=7, size: 6
[4] Generating expression of size 6
[4] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=6, size: 5
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[3] Op2 size=7, sizes: [[1,5],[2,4],[3,3],[4,2],[5,1]]
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[2] Generating expression of size 2
[2] TFold size=2, sizes: []
[2] Op1 size=2, size: 1
[2] Op2 size=2, sizes: []
[2] Generating expression of size 8
[2] TFold size=8, sizes: [[1,1,4],[1,2,3],[1,3,2],[1,4,1],[2,1,3],[2,2,2],[2,3,1],[3,1,2],[3,2,1],[4,1,1]]
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op1 size=8, size: 7
[3] Generating expression of size 7
[3] TFold size=7, sizes: [[1,1,3],[1,2,2],[1,3,1],[2,1,2],[2,2,1],[3,1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=7, size: 6
[4] Generating expression of size 6
[4] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=6, size: 5
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[3] Op2 size=7, sizes: [[1,5],[2,4],[3,3],[4,2],[5,1]]
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[2] Op2 size=8, sizes: [[1,6],[2,5],[3,4],[4,3],[5,2],[6,1]]
[3] Generating expression of size 6
[3] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=6, size: 5
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 6
[3] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=6, size: 5
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[2] Generating expression of size 3
[2] TFold size=3, sizes: []
[2] Op1 size=3, size: 2
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op2 size=3, sizes: [[1,1]]
[2] Generating expression of size 7
[2] TFold size=7, sizes: [[1,1,3],[1,2,2],[1,3,1],[2,1,2],[2,2,1],[3,1,1]]
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op1 size=7, size: 6
[3] Generating expression of size 6
[3] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=6, size: 5
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[2] Op2 size=7, sizes: [[1,5],[2,4],[3,3],[4,2],[5,1]]
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[2] Generating expression of size 4
[2] TFold size=4, sizes: []
[2] Op1 size=4, size: 3
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[2] Op2 size=4, sizes: [[1,2],[2,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Generating expression of size 6
[2] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op1 size=6, size: 5
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[2] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[2] Generating expression of size 5
[2] TFold size=5, sizes: [[1,1,1]]
[2] Op1 size=5, size: 4
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[2] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[2] Generating expression of size 5
[2] Op1 size=5, size: 4
[3] Generating expression of size 4
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[2] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[3] Generating expression of size 3
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[2] Generating expression of size 6
[2] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op1 size=6, size: 5
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[2] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[2] Generating expression of size 4
[2] Op1 size=4, size: 3
[3] Generating expression of size 3
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[2] Op2 size=4, sizes: [[1,2],[2,1]]
[3] Generating expression of size 2
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Generating expression of size 7
[2] TFold size=7, sizes: [[1,1,3],[1,2,2],[1,3,1],[2,1,2],[2,2,1],[3,1,1]]
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op1 size=7, size: 6
[3] Generating expression of size 6
[3] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=6, size: 5
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[2] Op2 size=7, sizes: [[1,5],[2,4],[3,3],[4,2],[5,1]]
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[2] Generating expression of size 3
[2] Op1 size=3, size: 2
[3] Generating expression of size 2
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op2 size=3, sizes: [[1,1]]
[2] Generating expression of size 8
[2] TFold size=8, sizes: [[1,1,4],[1,2,3],[1,3,2],[1,4,1],[2,1,3],[2,2,2],[2,3,1],[3,1,2],[3,2,1],[4,1,1]]
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op1 size=8, size: 7
[3] Generating expression of size 7
[3] TFold size=7, sizes: [[1,1,3],[1,2,2],[1,3,1],[2,1,2],[2,2,1],[3,1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=7, size: 6
[4] Generating expression of size 6
[4] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=6, size: 5
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[3] Op2 size=7, sizes: [[1,5],[2,4],[3,3],[4,2],[5,1]]
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[2] Op2 size=8, sizes: [[1,6],[2,5],[3,4],[4,3],[5,2],[6,1]]
[3] Generating expression of size 6
[3] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=6, size: 5
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 6
[3] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=6, size: 5
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[2] Generating expression of size 2
[2] Op1 size=2, size: 1
[2] Op2 size=2, sizes: []
[2] Generating expression of size 9
[2] TFold size=9, sizes: [[1,1,5],[1,2,4],[1,3,3],[1,4,2],[1,5,1],[2,1,4],[2,2,3],[2,3,2],[2,4,1],[3,1,3],[3,2,2],[3,3,1],[4,1,2],[4,2,1],[5,1,1]]
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[2] Op1 size=9, size: 8
[3] Generating expression of size 8
[3] TFold size=8, sizes: [[1,1,4],[1,2,3],[1,3,2],[1,4,1],[2,1,3],[2,2,2],[2,3,1],[3,1,2],[3,2,1],[4,1,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=8, size: 7
[4] Generating expression of size 7
[4] TFold size=7, sizes: [[1,1,3],[1,2,2],[1,3,1],[2,1,2],[2,2,1],[3,1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=7, size: 6
[5] Generating expression of size 6
[5] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op1 size=6, size: 5
[6] Generating expression of size 5
[6] TFold size=5, sizes: [[1,1,1]]
[6] Op1 size=5, size: 4
[7] Generating expression of size 4
[7] TFold size=4, sizes: []
[7] Op1 size=4, size: 3
[8] Generating expression of size 3
[8] TFold size=3, sizes: []
[8] Op1 size=3, size: 2
[9] Generating expression of size 2
[9] TFold size=2, sizes: []
[9] Op1 size=2, size: 1
[9] Op2 size=2, sizes: []
[8] Op2 size=3, sizes: [[1,1]]
[7] Op2 size=4, sizes: [[1,2],[2,1]]
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[6] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[4] Op2 size=7, sizes: [[1,5],[2,4],[3,3],[4,2],[5,1]]
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=8, sizes: [[1,6],[2,5],[3,4],[4,3],[5,2],[6,1]]
[4] Generating expression of size 6
[4] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=6, size: 5
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 6
[4] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=6, size: 5
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[2] Op2 size=9, sizes: [[1,7],[2,6],[3,5],[4,4],[5,3],[6,2],[7,1]]
[3] Generating expression of size 7
[3] TFold size=7, sizes: [[1,1,3],[1,2,2],[1,3,1],[2,1,2],[2,2,1],[3,1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=7, size: 6
[4] Generating expression of size 6
[4] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=6, size: 5
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[3] Op2 size=7, sizes: [[1,5],[2,4],[3,3],[4,2],[5,1]]
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 2
[3] TFold size=2, sizes: []
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 6
[3] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=6, size: 5
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Generating expression of size 3
[3] TFold size=3, sizes: []
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 4
[3] TFold size=4, sizes: []
[3] Op1 size=4, size: 3
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=4, sizes: [[1,2],[2,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Generating expression of size 5
[3] TFold size=5, sizes: [[1,1,1]]
[3] Op1 size=5, size: 4
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 3
[3] Op1 size=3, size: 2
[4] Generating expression of size 2
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op2 size=3, sizes: [[1,1]]
[3] Generating expression of size 6
[3] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=6, size: 5
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[3] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[3] Generating expression of size 2
[3] Op1 size=2, size: 1
[3] Op2 size=2, sizes: []
[3] Generating expression of size 7
[3] TFold size=7, sizes: [[1,1,3],[1,2,2],[1,3,1],[2,1,2],[2,2,1],[3,1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[3] Op1 size=7, size: 6
[4] Generating expression of size 6
[4] TFold size=6, sizes: [[1,1,2],[1,2,1],[2,1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op1 size=6, size: 5
[5] Generating expression of size 5
[5] TFold size=5, sizes: [[1,1,1]]
[5] Op1 size=5, size: 4
[6] Generating expression of size 4
[6] TFold size=4, sizes: []
[6] Op1 size=4, size: 3
[7] Generating expression of size 3
[7] TFold size=3, sizes: []
[7] Op1 size=3, size: 2
[8] Generating expression of size 2
[8] TFold size=2, sizes: []
[8] Op1 size=2, size: 1
[8] Op2 size=2, sizes: []
[7] Op2 size=3, sizes: [[1,1]]
[6] Op2 size=4, sizes: [[1,2],[2,1]]
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[5] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=6, sizes: [[1,4],[2,3],[3,2],[4,1]]
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[3] Op2 size=7, sizes: [[1,5],[2,4],[3,3],[4,2],[5,1]]
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 3
[4] TFold size=3, sizes: []
[4] Op1 size=3, size: 2
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Op2 size=3, sizes: [[1,1]]
[4] Generating expression of size 4
[4] TFold size=4, sizes: []
[4] Op1 size=4, size: 3
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[4] Op2 size=4, sizes: [[1,2],[2,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[4] Generating expression of size 2
[4] TFold size=2, sizes: []
[4] Op1 size=2, size: 1
[4] Op2 size=2, sizes: []
[4] Generating expression of size 5
[4] TFold size=5, sizes: [[1,1,1]]
[4] Op1 size=5, size: 4
[5] Generating expression of size 4
[5] TFold size=4, sizes: []
[5] Op1 size=4, size: 3
[6] Generating expression of size 3
[6] TFold size=3, sizes: []
[6] Op1 size=3, size: 2
[7] Generating expression of size 2
[7] TFold size=2, sizes: []
[7] Op1 size=2, size: 1
[7] Op2 size=2, sizes: []
[6] Op2 size=3, sizes: [[1,1]]
[5] Op2 size=4, sizes: [[1,2],[2,1]]
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[4] Op2 size=5, sizes: [[1,3],[2,2],[3,1]]
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 2
[5] TFold size=2, sizes: []
[5] Op1 size=2, size: 1
[5] Op2 size=2, sizes: []
[5] Generating expression of size 3
[5] TFold size=3, sizes: []
[5] Op1 size=3, size: 2
[6] Generating expression of size 2
[6] TFold size=2, sizes: []
[6] Op1 size=2, size: 1
[6] Op2 size=2, sizes: []
[5] Op2 size=3, sizes: [[1,1]]
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x1 (plus 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x2 (plus 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or x3 (plus 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 0 (plus 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or 1 (plus 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x1 (or 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x2 (or 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus x3 (or 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 0 (or 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus 1 (or 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x1 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x2 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus x3 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 0 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (or (plus 1 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x1 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x2 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or x3 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 0 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (shr4 (plus (or 1 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (shr4 (plus 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (shr4 (plus 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (shr4 (plus 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (shr4 (plus 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (shr4 (plus 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (shr4 (or 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (shr4 (or 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (shr4 (or 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (shr4 (or 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or x1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or x1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or x1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or x1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or x1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or x2 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or x2 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or x2 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or x2 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or x2 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or x3 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or x3 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or x3 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or x3 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or x3 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or 0 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or 0 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or 0 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or 0 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or 0 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or 1 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or 1 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or 1 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or 1 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (shr4 (or 1 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x1) (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x2) (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 x3) (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 0) (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 1) (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x1) (or 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x2) (or 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 x3) (or 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 0) (or 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 1) (or 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x1 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x2 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus x3 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 0 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (shr4 (plus 1 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x1) 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x2) 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 x3) 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 0) 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus (shr4 1) 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x1 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x2 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or x3 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 0 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (shr4 (or 1 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x1) 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x2) 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 x3) 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 0) 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or (shr4 1) 1) 1)))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus x1 x1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus x1 x2)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus x1 x3)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus x1 0)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus x1 1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus x2 x1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus x2 x2)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus x2 x3)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus x2 0)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus x2 1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus x3 x1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus x3 x2)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus x3 x3)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus x3 0)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus x3 1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus 0 x1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus 0 x2)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus 0 x3)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus 0 0)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus 0 1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus 1 x1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus 1 x2)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus 1 x3)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus 1 0)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (shr4 (plus 1 1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x2 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x2 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x2 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x2 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x2 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x3 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x3 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x3 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x3 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x3 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 0 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 0 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 0 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 0 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 0 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus x1 x1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus x1 x2)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus x1 x3)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus x1 0)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus x1 1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus x2 x1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus x2 x2)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus x2 x3)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus x2 0)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus x2 1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus x3 x1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus x3 x2)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus x3 x3)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus x3 0)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus x3 1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus 0 x1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus 0 x2)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus 0 x3)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus 0 0)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus 0 1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus 1 x1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus 1 x2)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus 1 x3)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus 1 0)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (shr4 (plus 1 1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x2 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x2 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x2 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x2 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x2 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x3 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x3 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x3 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x3 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x3 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 0 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 0 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 0 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 0 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 0 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus x1 x1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus x1 x2)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus x1 x3)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus x1 0)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus x1 1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus x2 x1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus x2 x2)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus x2 x3)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus x2 0)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus x2 1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus x3 x1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus x3 x2)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus x3 x3)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus x3 0)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus x3 1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus 0 x1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus 0 x2)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus 0 x3)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus 0 0)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus 0 1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus 1 x1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus 1 x2)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus 1 x3)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus 1 0)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (shr4 (plus 1 1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x2 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x2 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x2 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x2 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x2 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x3 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x3 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x3 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x3 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x3 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 0 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 0 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 0 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 0 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 0 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus x1 x1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus x1 x2)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus x1 x3)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus x1 0)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus x1 1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus x2 x1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus x2 x2)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus x2 x3)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus x2 0)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus x2 1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus x3 x1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus x3 x2)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus x3 x3)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus x3 0)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus x3 1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus 0 x1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus 0 x2)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus 0 x3)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus 0 0)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus 0 1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus 1 x1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus 1 x2)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus 1 x3)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus 1 0)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (shr4 (plus 1 1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x2 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x2 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x2 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x2 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x2 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x3 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x3 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x3 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x3 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x3 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 0 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 0 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 0 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 0 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 0 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus x1 x1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus x1 x2)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus x1 x3)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus x1 0)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus x1 1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus x2 x1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus x2 x2)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus x2 x3)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus x2 0)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus x2 1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus x3 x1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus x3 x2)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus x3 x3)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus x3 0)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus x3 1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus 0 x1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus 0 x2)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus 0 x3)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus 0 0)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus 0 1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus 1 x1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus 1 x2)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus 1 x3)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus 1 0)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (shr4 (plus 1 1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x2 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x2 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x2 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x2 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x2 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x3 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x3 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x3 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x3 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x3 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 0 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 0 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 0 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 0 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 0 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or x1 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or x1 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or x1 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or x1 0)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or x1 1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or x2 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or x2 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or x2 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or x2 0)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or x2 1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or x3 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or x3 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or x3 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or x3 0)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or x3 1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or 0 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or 0 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or 0 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or 0 0)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or 0 1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or 1 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or 1 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or 1 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or 1 0)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (shr4 (or 1 1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x2 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x2 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x2 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x2 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x2 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x3 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x3 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x3 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x3 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x3 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 0 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 0 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 0 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 0 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 0 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or x1 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or x1 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or x1 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or x1 0)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or x1 1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or x2 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or x2 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or x2 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or x2 0)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or x2 1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or x3 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or x3 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or x3 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or x3 0)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or x3 1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or 0 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or 0 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or 0 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or 0 0)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or 0 1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or 1 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or 1 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or 1 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or 1 0)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (shr4 (or 1 1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x2 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x2 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x2 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x2 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x2 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x3 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x3 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x3 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x3 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x3 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 0 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 0 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 0 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 0 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 0 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or x1 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or x1 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or x1 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or x1 0)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or x1 1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or x2 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or x2 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or x2 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or x2 0)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or x2 1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or x3 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or x3 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or x3 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or x3 0)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or x3 1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or 0 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or 0 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or 0 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or 0 0)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or 0 1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or 1 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or 1 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or 1 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or 1 0)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (shr4 (or 1 1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x2 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x2 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x2 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x2 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x2 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x3 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x3 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x3 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x3 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x3 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 0 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 0 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 0 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 0 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 0 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or x1 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or x1 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or x1 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or x1 0)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or x1 1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or x2 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or x2 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or x2 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or x2 0)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or x2 1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or x3 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or x3 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or x3 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or x3 0)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or x3 1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or 0 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or 0 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or 0 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or 0 0)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or 0 1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or 1 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or 1 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or 1 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or 1 0)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (shr4 (or 1 1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x2 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x2 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x2 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x2 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x2 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x3 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x3 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x3 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x3 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x3 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 0 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 0 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 0 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 0 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 0 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or x1 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or x1 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or x1 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or x1 0)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or x1 1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or x2 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or x2 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or x2 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or x2 0)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or x2 1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or x3 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or x3 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or x3 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or x3 0)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or x3 1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or 0 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or 0 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or 0 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or 0 0)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or 0 1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or 1 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or 1 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or 1 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or 1 0)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (shr4 (or 1 1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x2 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x2 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x2 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x2 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x2 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x3 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x3 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x3 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x3 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x3 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 0 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 0 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 0 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 0 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 0 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 1 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 1 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 1 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 1 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 1 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 x1) x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 x1) x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 x1) x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 x1) 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 x1) 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 x2) x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 x2) x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 x2) x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 x2) 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 x2) 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 x3) x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 x3) x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 x3) x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 x3) 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 x3) 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 0) x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 0) x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 0) x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 0) 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 0) 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 1) x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 1) x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 1) x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 1) 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or (shr4 1) 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x2 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x2 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x2 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x2 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x2 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x3 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x3 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x3 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x3 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x3 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 0 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 0 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 0 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 0 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 0 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 1 (shr4 (shr4 x1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 1 (shr4 (shr4 x2)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 1 (shr4 (shr4 x3)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 1 (shr4 (shr4 0)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 1 (shr4 (shr4 1)))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x2) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x2) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x2) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x2) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x2) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x3) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x3) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x3) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x3) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x3) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 0) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 0) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 0) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 0) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 0) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 1) (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 1) (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 1) (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 1) (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 1) (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 x1)) x1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 x1)) x2)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 x1)) x3)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 x1)) 0)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 x1)) 1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 x2)) x1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 x2)) x2)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 x2)) x3)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 x2)) 0)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 x2)) 1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 x3)) x1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 x3)) x2)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 x3)) x3)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 x3)) 0)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 x3)) 1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 0)) x1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 0)) x2)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 0)) x3)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 0)) 0)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 0)) 1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 1)) x1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 1)) x2)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 1)) x3)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 1)) 0)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 (shr4 1)) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (shr4 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (shr4 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (shr4 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (shr4 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (shr4 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (shr4 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (shr4 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (shr4 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (shr4 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (shr4 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus x1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus x1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus x1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus x1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus x1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus x2 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus x2 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus x2 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus x2 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus x2 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus x3 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus x3 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus x3 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus x3 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus x3 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus 0 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus 0 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus 0 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus 0 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus 0 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus 1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus 1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus 1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus 1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x1)) (plus 1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus x1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus x1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus x1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus x1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus x1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus x2 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus x2 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus x2 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus x2 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus x2 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus x3 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus x3 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus x3 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus x3 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus x3 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus 0 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus 0 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus 0 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus 0 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus 0 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus 1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus 1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus 1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus 1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x2)) (plus 1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus x1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus x1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus x1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus x1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus x1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus x2 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus x2 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus x2 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus x2 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus x2 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus x3 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus x3 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus x3 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus x3 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus x3 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus 0 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus 0 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus 0 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus 0 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus 0 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus 1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus 1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus 1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus 1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 x3)) (plus 1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus x1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus x1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus x1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus x1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus x1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus x2 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus x2 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus x2 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus x2 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus x2 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus x3 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus x3 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus x3 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus x3 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus x3 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus 0 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus 0 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus 0 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus 0 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus 0 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus 1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus 1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus 1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus 1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 0)) (plus 1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus x1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus x1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus x1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus x1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus x1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus x2 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus x2 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus x2 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus x2 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus x2 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus x3 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus x3 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus x3 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus x3 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus x3 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus 0 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus 0 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus 0 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus 0 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus 0 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus 1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus 1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus 1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus 1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 1)) (plus 1 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x2) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x2) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x2) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x2) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x2) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x3) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x3) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x3) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x3) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x3) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 0) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 0) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 0) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 0) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 0) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus x1 1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x2) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x2) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x2) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x2) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x2) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x3) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x3) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x3) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x3) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x3) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 0) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 0) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 0) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 0) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 0) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus x2 1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x2) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x2) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x2) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x2) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x2) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x3) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x3) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x3) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x3) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x3) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 0) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 0) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 0) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 0) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 0) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus x3 1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x2) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x2) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x2) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x2) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x2) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x3) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x3) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x3) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x3) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x3) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 0) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 0) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 0) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 0) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 0) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus 0 1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x2) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x2) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x2) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x2) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x2) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x3) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x3) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x3) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x3) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x3) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 0) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 0) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 0) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 0) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 0) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or (plus 1 1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or x1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or x1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or x1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or x1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or x1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or x2 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or x2 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or x2 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or x2 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or x2 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or x3 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or x3 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or x3 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or x3 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or x3 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or 0 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or 0 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or 0 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or 0 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or 0 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or 1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or 1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or 1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or 1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x1)) (or 1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or x1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or x1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or x1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or x1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or x1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or x2 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or x2 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or x2 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or x2 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or x2 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or x3 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or x3 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or x3 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or x3 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or x3 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or 0 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or 0 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or 0 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or 0 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or 0 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or 1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or 1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or 1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or 1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x2)) (or 1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or x1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or x1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or x1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or x1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or x1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or x2 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or x2 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or x2 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or x2 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or x2 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or x3 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or x3 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or x3 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or x3 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or x3 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or 0 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or 0 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or 0 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or 0 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or 0 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or 1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or 1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or 1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or 1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 x3)) (or 1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or x1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or x1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or x1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or x1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or x1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or x2 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or x2 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or x2 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or x2 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or x2 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or x3 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or x3 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or x3 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or x3 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or x3 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or 0 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or 0 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or 0 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or 0 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or 0 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or 1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or 1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or 1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or 1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 0)) (or 1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or x1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or x1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or x1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or x1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or x1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or x2 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or x2 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or x2 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or x2 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or x2 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or x3 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or x3 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or x3 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or x3 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or x3 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or 0 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or 0 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or 0 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or 0 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or 0 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or 1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or 1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or 1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or 1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 1)) (or 1 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x2) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x2) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x2) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x2) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x2) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x3) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x3) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x3) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x3) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x3) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 0) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 0) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 0) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 0) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 0) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or x1 1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x2) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x2) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x2) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x2) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x2) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x3) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x3) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x3) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x3) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x3) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 0) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 0) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 0) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 0) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 0) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or x2 1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x2) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x2) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x2) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x2) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x2) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x3) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x3) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x3) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x3) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x3) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 0) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 0) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 0) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 0) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 0) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or x3 1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x2) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x2) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x2) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x2) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x2) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x3) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x3) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x3) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x3) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x3) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 0) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 0) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 0) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 0) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 0) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or 0 1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x2) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x2) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x2) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x2) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x2) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x3) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x3) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x3) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x3) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x3) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 0) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 0) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 0) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 0) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 0) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 1) (shr4 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 1) (shr4 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 1) (shr4 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 1) (shr4 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus (or 1 1) (shr4 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x2)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x2)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x2)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x2)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x2)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x3)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x3)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x3)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x3)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x3)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 0)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 0)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 0)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 0)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 0)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 1)) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 1)) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 1)) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 1)) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 1)) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 x1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 x1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 x1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 x1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 x1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 x2))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 x2))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 x2))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 x2))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 x2))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 x3))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 x3))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 x3))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 x3))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 x3))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 0))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 0))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 0))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 0))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 0))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x1 1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 x1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 x1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 x1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 x1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 x1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 x2))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 x2))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 x2))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 x2))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 x2))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 x3))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 x3))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 x3))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 x3))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 x3))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 0))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 0))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 0))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 0))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 0))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x2 1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 x1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 x1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 x1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 x1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 x1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 x2))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 x2))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 x2))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 x2))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 x2))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 x3))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 x3))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 x3))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 x3))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 x3))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 0))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 0))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 0))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 0))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 0))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus x3 1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 x1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 x1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 x1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 x1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 x1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 x2))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 x2))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 x2))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 x2))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 x2))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 x3))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 x3))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 x3))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 x3))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 x3))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 0))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 0))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 0))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 0))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 0))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 0 1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 x1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 x1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 x1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 x1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 x1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 x2))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 x2))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 x2))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 x2))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 x2))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 x3))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 x3))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 x3))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 x3))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 x3))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 0))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 0))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 0))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 0))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 0))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (shr4 (plus 1 1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x1) 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x2) 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 x3) 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 0) 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus (shr4 1) 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) x1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) x1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) x1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) x1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) x1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) x2) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) x2) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) x2) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) x2) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) x2) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) x3) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) x3) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) x3) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) x3) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) x3) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) 0) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) 0) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) 0) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) 0) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) 0) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) 1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) 1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) 1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) 1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x1)) 1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) x1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) x1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) x1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) x1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) x1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) x2) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) x2) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) x2) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) x2) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) x2) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) x3) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) x3) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) x3) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) x3) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) x3) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) 0) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) 0) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) 0) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) 0) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) 0) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) 1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) 1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) 1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) 1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x2)) 1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) x1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) x1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) x1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) x1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) x1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) x2) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) x2) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) x2) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) x2) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) x2) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) x3) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) x3) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) x3) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) x3) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) x3) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) 0) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) 0) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) 0) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) 0) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) 0) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) 1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) 1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) 1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) 1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 x3)) 1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) x1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) x1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) x1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) x1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) x1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) x2) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) x2) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) x2) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) x2) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) x2) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) x3) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) x3) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) x3) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) x3) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) x3) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) 0) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) 0) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) 0) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) 0) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) 0) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) 1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) 1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) 1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) 1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 0)) 1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) x1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) x1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) x1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) x1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) x1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) x2) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) x2) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) x2) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) x2) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) x2) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) x3) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) x3) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) x3) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) x3) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) x3) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) 0) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) 0) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) 0) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) 0) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) 0) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) 1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) 1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) 1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) 1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 (shr4 1)) 1) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 x1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 x1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 x1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 x1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 x1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 x2))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 x2))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 x2))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 x2))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 x2))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 x3))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 x3))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 x3))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 x3))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 x3))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 0))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 0))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 0))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 0))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 0))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x1 1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 x1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 x1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 x1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 x1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 x1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 x2))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 x2))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 x2))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 x2))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 x2))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 x3))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 x3))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 x3))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 x3))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 x3))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 0))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 0))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 0))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 0))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 0))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x2 1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 x1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 x1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 x1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 x1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 x1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 x2))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 x2))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 x2))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 x2))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 x2))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 x3))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 x3))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 x3))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 x3))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 x3))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 0))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 0))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 0))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 0))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 0))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or x3 1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 x1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 x1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 x1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 x1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 x1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 x2))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 x2))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 x2))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 x2))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 x2))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 x3))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 x3))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 x3))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 x3))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 x3))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 0))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 0))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 0))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 0))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 0))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 0 1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 x1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 x1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 x1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 x1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 x1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 x2))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 x2))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 x2))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 x2))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 x2))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 x3))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 x3))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 x3))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 x3))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 x3))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 0))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 0))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 0))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 0))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 0))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (shr4 (or 1 1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x1) 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x2) 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 x3) 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 0) 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or (shr4 1) 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 x1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 x1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 x1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 x1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 x1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 x2))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 x2))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 x2))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 x2))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 x2))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 x3))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 x3))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 x3))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 x3))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 x3))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 0))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 0))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 0))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 0))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 0))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 1))) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 1))) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 1))) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 1))) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 (shr4 1))) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) x1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) x1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) x1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) x1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) x1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) x2) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) x2) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) x2) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) x2) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) x2) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) x3) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) x3) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) x3) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) x3) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) x3) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) 0) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) 0) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) 0) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) 0) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) 0) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) 1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) 1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) 1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) 1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x1)) 1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) x1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) x1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) x1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) x1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) x1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) x2) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) x2) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) x2) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) x2) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) x2) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) x3) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) x3) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) x3) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) x3) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) x3) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) 0) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) 0) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) 0) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) 0) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) 0) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) 1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) 1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) 1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) 1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x2)) 1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) x1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) x1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) x1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) x1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) x1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) x2) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) x2) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) x2) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) x2) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) x2) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) x3) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) x3) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) x3) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) x3) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) x3) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) 0) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) 0) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) 0) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) 0) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) 0) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) 1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) 1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) 1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) 1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 x3)) 1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) x1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) x1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) x1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) x1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) x1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) x2) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) x2) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) x2) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) x2) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) x2) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) x3) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) x3) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) x3) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) x3) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) x3) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) 0) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) 0) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) 0) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) 0) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) 0) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) 1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) 1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) 1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) 1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 0)) 1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) x1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) x1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) x1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) x1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) x1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) x2) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) x2) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) x2) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) x2) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) x2) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) x3) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) x3) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) x3) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) x3) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) x3) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) 0) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) 0) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) 0) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) 0) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) 0) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) 1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) 1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) 1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) 1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 (shr4 1)) 1) 1))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 1) 1)))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x2 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x2 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x2 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x2 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x2 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x3 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x3 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x3 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x3 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x3 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 0 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 0 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 0 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 0 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 0 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x2 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x2 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x2 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x2 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x2 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x3 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x3 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x3 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x3 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x3 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 0 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 0 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 0 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 0 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 0 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x2 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x2 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x2 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x2 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x2 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x3 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x3 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x3 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x3 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x3 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 0 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 0 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 0 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 0 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 0 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x2 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x2 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x2 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x2 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x2 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x3 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x3 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x3 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x3 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x3 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 0 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 0 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 0 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 0 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 0 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x2 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x2 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x2 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x2 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x2 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x3 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x3 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x3 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x3 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x3 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 0 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 0 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 0 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 0 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 0 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x2 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x2 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x2 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x2 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x2 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x3 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x3 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x3 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x3 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x3 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 0 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 0 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 0 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 0 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 0 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x2 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x2 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x2 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x2 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x2 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x3 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x3 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x3 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x3 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x3 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 0 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 0 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 0 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 0 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 0 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x2 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x2 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x2 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x2 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x2 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x3 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x3 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x3 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x3 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x3 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 0 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 0 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 0 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 0 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 0 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x2 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x2 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x2 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x2 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x2 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x3 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x3 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x3 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x3 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x3 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 0 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 0 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 0 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 0 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 0 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x2 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x2 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x2 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x2 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x2 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x3 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x3 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x3 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x3 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x3 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 0 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 0 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 0 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 0 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 0 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 1 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x2) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x2) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x2) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x2) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x2) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x3) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x3) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x3) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x3) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x3) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 0) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 0) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 0) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 0) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 0) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x2) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x2) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x2) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x2) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x2) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x3) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x3) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x3) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x3) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x3) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 0) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 0) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 0) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 0) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 0) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x2) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x2) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x2) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x2) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x2) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x3) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x3) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x3) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x3) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x3) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 0) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 0) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 0) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 0) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 0) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x2) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x2) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x2) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x2) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x2) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x3) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x3) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x3) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x3) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x3) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 0) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 0) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 0) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 0) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 0) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x2) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x2) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x2) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x2) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x2) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x3) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x3) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x3) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x3) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x3) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 0) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 0) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 0) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 0) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 0) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 1) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x2) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x2) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x2) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x2) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x2) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x3) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x3) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x3) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x3) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x3) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 0) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 0) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 0) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 0) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 0) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x2) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x2) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x2) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x2) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x2) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x3) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x3) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x3) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x3) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x3) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 0) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 0) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 0) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 0) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 0) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x2) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x2) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x2) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x2) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x2) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x3) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x3) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x3) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x3) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x3) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 0) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 0) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 0) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 0) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 0) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x2) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x2) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x2) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x2) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x2) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x3) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x3) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x3) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x3) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x3) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 0) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 0) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 0) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 0) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 0) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x2) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x2) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x2) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x2) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x2) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x3) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x3) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x3) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x3) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x3) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 0) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 0) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 0) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 0) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 0) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 1) 1))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x1 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x2 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or x3 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 0 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (or 1 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x1 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x2 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus x3 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 0 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (shr4 (plus 1 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x1 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x2 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus x3 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 0 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (or (plus 1 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x1 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x2 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or x3 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 0 1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x1) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x2) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x2) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x2) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x2) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x2) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x3) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x3) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x3) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x3) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 x3) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 0) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 0) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 0) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 0) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 0) 1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 1) x1)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 1) x2)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 1) x3)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 1) 0)))
(fold x1 0 (lambda (x2 x3) (shr4 (plus (or 1 1) 1)))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (shr4 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (or x1 (plus (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (shr4 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (or x2 (plus (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (shr4 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (or x3 (plus (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (shr4 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (or 0 (plus (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x1 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x1 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x1 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x1 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x1 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x2 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x2 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x2 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x2 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x2 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x3 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x3 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x3 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x3 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus x3 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 0 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 0 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 0 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 0 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 0 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 1 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 1 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 1 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 1 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (shr4 (plus 1 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (or 1 (plus (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (shr4 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (plus x1 (or (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (shr4 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (plus x2 (or (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (shr4 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (plus x3 (or (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (shr4 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (plus 0 (or (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x1 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x1 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x1 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x1 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x1 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x2 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x2 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x2 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x2 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x2 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x3 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x3 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x3 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x3 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or x3 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 0 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 0 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 0 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 0 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 0 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 1 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 1 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 1 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 1 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (shr4 (or 1 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x2 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x2 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x2 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x2 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x2 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x3 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x3 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x3 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x3 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or x3 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 0 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 0 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 0 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 0 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 0 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 1 (shr4 x1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 1 (shr4 x2))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 1 (shr4 x3))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 1 (shr4 0))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or 1 (shr4 1))))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x1) x1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x1) x2)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x1) x3)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x1) 0)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x1) 1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x2) x1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x2) x2)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x2) x3)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x2) 0)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x2) 1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x3) x1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x3) x2)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x3) x3)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x3) 0)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 x3) 1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 0) x1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 0) x2)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 0) x3)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 0) 0)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 0) 1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 1) x1)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 1) x2)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 1) x3)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 1) 0)))
(fold x1 0 (lambda (x2 x3) (plus 1 (or (shr4 1) 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x2 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x2 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x2 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x2 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x2 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x3 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x3 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x3 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x3 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus x3 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 0 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 0 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 0 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 0 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 0 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x1) (plus 1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x2 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x2 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x2 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x2 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x2 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x3 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x3 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x3 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x3 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus x3 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 0 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 0 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 0 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 0 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 0 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x2) (plus 1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x2 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x2 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x2 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x2 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x2 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x3 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x3 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x3 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x3 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus x3 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 0 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 0 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 0 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 0 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 0 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 x3) (plus 1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x2 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x2 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x2 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x2 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x2 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x3 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x3 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x3 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x3 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus x3 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 0 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 0 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 0 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 0 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 0 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 0) (plus 1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x1 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x2 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x2 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x2 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x2 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x2 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x3 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x3 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x3 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x3 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus x3 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 0 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 0 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 0 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 0 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 0 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 1 x1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 1 x2)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 1 x3)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 1 0)))
(fold x1 0 (lambda (x2 x3) (or (shr4 1) (plus 1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x2 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x2 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x2 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x2 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x2 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x3 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x3 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x3 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x3 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or x3 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 0 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 0 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 0 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 0 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 0 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x1) (or 1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x2 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x2 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x2 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x2 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x2 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x3 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x3 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x3 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x3 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or x3 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 0 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 0 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 0 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 0 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 0 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x2) (or 1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x2 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x2 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x2 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x2 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x2 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x3 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x3 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x3 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x3 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or x3 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 0 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 0 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 0 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 0 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 0 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 x3) (or 1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x2 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x2 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x2 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x2 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x2 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x3 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x3 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x3 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x3 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or x3 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 0 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 0 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 0 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 0 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 0 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 0) (or 1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x1 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x2 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x2 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x2 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x2 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x2 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x3 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x3 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x3 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x3 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or x3 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 0 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 0 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 0 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 0 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 0 1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 1 x1)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 1 x2)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 1 x3)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 1 0)))
(fold x1 0 (lambda (x2 x3) (plus (shr4 1) (or 1 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x1 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x2 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus x3 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 0 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (or (plus 1 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x1 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x2 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or x3 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 0 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x2) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x2) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x2) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x2) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x2) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x3) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x3) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x3) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x3) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 x3) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 0) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 0) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 0) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 0) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 0) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 1) (shr4 x1)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 1) (shr4 x2)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 1) (shr4 x3)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 1) (shr4 0)))
(fold x1 0 (lambda (x2 x3) (plus (or 1 1) (shr4 1)))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x1 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x2 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus x3 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 0 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (shr4 (plus 1 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x1 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x2 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus x3 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 0 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (or (plus 1 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x2) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x2) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x2) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x2) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x2) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x3) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x3) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x3) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x3) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) x3) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 0) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 0) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 0) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 0) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 0) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x1) 1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x2) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x2) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x2) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x2) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x2) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x3) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x3) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x3) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x3) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) x3) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 0) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 0) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 0) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 0) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 0) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x2) 1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x2) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x2) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x2) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x2) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x2) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x3) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x3) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x3) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x3) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) x3) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 0) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 0) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 0) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 0) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 0) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 x3) 1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x2) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x2) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x2) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x2) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x2) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x3) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x3) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x3) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x3) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) x3) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 0) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 0) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 0) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 0) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 0) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 0) 1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x1) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x2) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x2) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x2) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x2) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x2) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x3) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x3) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x3) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x3) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) x3) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 0) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 0) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 0) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 0) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 0) 1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 1) x1))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 1) x2))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 1) x3))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 1) 0))
(fold x1 0 (lambda (x2 x3) (or (plus (shr4 1) 1) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x1 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x2 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or x3 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 0 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (shr4 (or 1 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x1 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x2 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or x3 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 0 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x2)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x2)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x2)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x2)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x2)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x3)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x3)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x3)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x3)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 x3)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 0)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 0)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 0)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 0)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 0)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 1)) x1))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 1)) x2))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 1)) x3))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 1)) 0))
(fold x1 0 (lambda (x2 x3) (plus (or 1 (shr4 1)) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x2) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x2) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x2) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x2) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x2) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x3) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x3) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x3) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x3) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) x3) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 0) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 0) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 0) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 0) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 0) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x1) 1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x2) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x2) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x2) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x2) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x2) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x3) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x3) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x3) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x3) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) x3) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 0) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 0) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 0) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 0) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 0) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x2) 1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x2) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x2) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x2) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x2) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x2) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x3) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x3) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x3) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x3) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) x3) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 0) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 0) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 0) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 0) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 0) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 x3) 1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x2) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x2) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x2) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x2) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x2) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x3) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x3) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x3) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x3) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) x3) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 0) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 0) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 0) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 0) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 0) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 0) 1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x1) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x2) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x2) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x2) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x2) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x2) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x3) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x3) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x3) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x3) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) x3) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 0) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 0) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 0) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 0) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 0) 1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 1) x1))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 1) x2))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 1) x3))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 1) 0))
(fold x1 0 (lambda (x2 x3) (plus (or (shr4 1) 1) 1))
