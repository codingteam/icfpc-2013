PROJECT(icfpc-solver-server)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

INCLUDE(CheckCXXCompilerFlag REQUIRED)
FIND_PACKAGE(PkgConfig)
FIND_PACKAGE(Boost REQUIRED)

CHECK_CXX_COMPILER_FLAG("-std=c++11" FLAGS_SUPPORT_CXX11)
IF(FLAGS_SUPPORT_CXX11)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wc++11-compat")
	MESSAGE(STATUS "Found C++11 support.")
ELSE(FLAGS_SUPPORT_CXX11)
	CHECK_CXX_COMPILER_FLAG("-std=c++0x" FLAGS_SUPPORT_CXX0X)
	IF(FLAGS_SUPPORT_CXX0X)
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x -Wc++0x-compat")
		MESSAGE(STATUS "Found C++0x support.")
	ELSE(FLAGS_SUPPORT_CXX0X)
		MESSAGE(SEND_ERROR "No C++0x support.")
	ENDIF(FLAGS_SUPPORT_CXX0X)
ENDIF(FLAGS_SUPPORT_CXX11)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")

PKG_CHECK_MODULES(CURLPP curlpp)

LINK_DIRECTORIES(${CURLPP_LIBRARY_DIRS})

INCLUDE_DIRECTORIES(${CURLPP_INCLUDE_DIRS} ${Boost_INCLUDE_DIRS})

ADD_EXECUTABLE(icfpc-solver-server
	expr.h
	expr.cpp
	generator.h
	generator.cpp
	main.cpp)

TARGET_LINK_LIBRARIES(icfpc-solver-server
	${CURLPP_LIBRARIES}
	${Boost_LIBRARIES})

INSTALL(TARGETS icfpc-solver-server DESTINATION bin)

